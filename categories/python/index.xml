<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Ahmedur Rahman Shovon</title>
    <link>https://arshovon.com/categories/python/</link>
    <description>Recent content in python on Ahmedur Rahman Shovon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Aug 2022 08:01:14 -0500</lastBuildDate>
    
	<atom:link href="https://arshovon.com/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>cuDF vs Pandas dataframe performance comparison</title>
      <link>https://arshovon.com/blog/cudf-vs-df/</link>
      <pubDate>Mon, 01 Aug 2022 08:01:14 -0500</pubDate>
      
      <guid>https://arshovon.com/blog/cudf-vs-df/</guid>
      <description>cuDF is a Python GPU DataFrame library with similar functionalities to Pandas DataFrame. It can be used for loading, joining, aggregating, filtering, and manipulating large datasets leveraging GPU programming models. cuDF provides a pandas-like API, so the developers or data scientists do not need to dive deeper into the CUDA programming model. It is a part of the Rapids suite that utilizes the NVIDIA CUDAÂ® programming model to expose high bandwidth memory speed and GPU parallelism.</description>
    </item>
    
    <item>
      <title>Run a Python script inside a virtual environment in the background</title>
      <link>https://arshovon.com/blog/python-background/</link>
      <pubDate>Fri, 18 Mar 2022 03:03:14 -0500</pubDate>
      
      <guid>https://arshovon.com/blog/python-background/</guid>
      <description>Scenario Suppose, we have a Python script that uses some Python packages. To keep the global environment clean, we use a virtual environment (venv) to install the dependencies. Let&#39;s assume, the script requires a long time to finish. We may need to check the intermediate results (e.g. print statement debugging) from the script during the execution process. We also want to run the script in the background without blocking a terminal window.</description>
    </item>
    
    <item>
      <title>Sorting a list (Python 3)</title>
      <link>https://arshovon.com/blog/sorting-a-list-python3/</link>
      <pubDate>Sun, 16 Jan 2022 07:01:32 -0600</pubDate>
      
      <guid>https://arshovon.com/blog/sorting-a-list-python3/</guid>
      <description>There are a lot of sorting algorithms such as Bubble sort, Insertion sort, Merge sort, Counting sort, etc. But most of the time, we use builtin sorting function to sort an iterable (e.g. list, tuple, dictionary, custom class with iterator etc.).
Today we will sort a given list of strings in several ways to understand the Python 3 built-in sorted function .
Dataset We will use the 50 U.S. states as our dataset.</description>
    </item>
    
  </channel>
</rss>