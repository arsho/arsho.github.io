<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Datalog on Ahmedur Rahman Shovon</title><link>https://arshovon.com/tags/datalog/</link><description>Recent content in Datalog on Ahmedur Rahman Shovon</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 04 May 2024 15:27:51 -0500</lastBuildDate><atom:link href="https://arshovon.com/tags/datalog/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Datalog as logic programming</title><link>https://arshovon.com/blog/datalog-introduction/</link><pubDate>Thu, 25 Apr 2024 10:13:14 -0500</pubDate><guid>https://arshovon.com/blog/datalog-introduction/</guid><description>&lt;h4 id="declarative-programming"&gt;Declarative programming&lt;/h4&gt;
&lt;p&gt;Declarative programming is focused on specifying the desired result of a computation, without explicitly defining the step-by-step procedures (also known as control flow) to achieve that result&lt;sup id="fnref:1"&gt;&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref"&gt;1&lt;/a&gt;&lt;/sup&gt;.
It focuses on answering the question of &lt;em&gt;what&lt;/em&gt; to achieve, rather than &lt;em&gt;how&lt;/em&gt; to achieve it.
This contrasts with imperative programming (e.g. C++, Python, JavaScript, Java etc.), which is focused on specifying the exact sequence of instructions (the &lt;em&gt;how&lt;/em&gt;) to perform a specific task
or reach a desired result (the &lt;em&gt;what&lt;/em&gt;).&lt;/p&gt;</description></item><item><title>Recursive queries in SQL and Datalog</title><link>https://arshovon.com/blog/recursive-queries/</link><pubDate>Tue, 23 Apr 2024 10:13:14 -0500</pubDate><guid>https://arshovon.com/blog/recursive-queries/</guid><description>&lt;p&gt;Recursive queries are a type of database query that involves recursively traversing and querying hierarchical or self-referential data structures.
They are particularly useful for querying data that has a nested or hierarchical representation.
Recursive queries enable developers to navigate and process these complex data structures by iteratively applying a set of rules or conditions until a termination criterion is met.&lt;/p&gt;
&lt;h2 id="recursive-queries-in-sql"&gt;Recursive queries in SQL&lt;/h2&gt;
&lt;p&gt;Recursive queries were introduced as part of the SQL:1999 standard which is known as SQL3, a major revision to the SQL language&lt;sup id="fnref:1"&gt;&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref"&gt;1&lt;/a&gt;&lt;/sup&gt;.
Prior to SQL3, SQL lacked built-in support for querying hierarchical or recursive data structures like organizational charts, bill-of-materials data, and network/graph data.
The introduction of recursive queries in SQL3 empowered developers to effectively query hierarchical or self-referential data structures.
Unlike traditional SQL queries that operate on a static set of rows, recursive queries enable traversal and manipulation of hierarchical data structures by iteratively executing an anchor and recursive member.&lt;/p&gt;</description></item><item><title>Monotonic and nonmonotonic reasoning in Datalog</title><link>https://arshovon.com/blog/monotonic-nonmonotonic-reasoning/</link><pubDate>Tue, 23 Apr 2024 07:13:14 -0500</pubDate><guid>https://arshovon.com/blog/monotonic-nonmonotonic-reasoning/</guid><description>&lt;p&gt;Datalog&lt;sup id="fnref:1"&gt;&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref"&gt;1&lt;/a&gt;&lt;/sup&gt;, a declarative logic programming language, is known for its ability to express knowledge and relationships between data.
When reasoning about this knowledge, the way new information affects existing conclusions plays a crucial role.
This article gives an introduction to monotonic and nonmonotonic reasoning in Datalog, exploring how adding information can influence the inferences drawn from a knowledge base.&lt;/p&gt;
&lt;h4 id="monotonic-reasoning-stable-and-predictable"&gt;Monotonic reasoning: Stable and Predictable&lt;/h4&gt;
&lt;p&gt;Monotonic reasoning is a fundamental concept in logic, where adding new information to a knowledge base preserves the existing conclusions.
In simpler terms, if a statement holds true based on the current knowledge, it remains true even after adding more information.
It is a form of logical reasoning where adding new information to the knowledge base does not invalidate or contradict any previously derived conclusions.
This characteristic makes monotonic reasoning predictable and reliable.&lt;/p&gt;</description></item><item><title>Install Soufflé on Ubuntu using Docker</title><link>https://arshovon.com/blog/install-souffl%C3%A9-on-ubuntu-docker/</link><pubDate>Sun, 21 Apr 2024 10:17:14 -0500</pubDate><guid>https://arshovon.com/blog/install-souffl%C3%A9-on-ubuntu-docker/</guid><description>&lt;h4 id="what-is-soufflé"&gt;What is Soufflé?&lt;/h4&gt;
&lt;p&gt;Datalog is a logic-based query programming language that allows users to write recursive queries at-ease.
Datalog does not have unified specifications for its syntax, so each implementation may differ.
Soufflé&lt;sup id="fnref:1"&gt;&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref"&gt;1&lt;/a&gt;&lt;/sup&gt; is an open source &amp;ldquo;state of the art&amp;rdquo; Datalog engine that uses OpenMP for parallelization in C++.
It provides a compiler to translate Datalog programs into efficient C++ code, enabling Soufflé to handle large datasets while maintaining fast execution speeds.
Soufflé also offers an interpreter for quick testing and debugging of Datalog programs.
In addition to its core functionality, Soufflé offers several advanced features&lt;sup id="fnref:2"&gt;&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref"&gt;2&lt;/a&gt;&lt;/sup&gt;, including:&lt;/p&gt;</description></item></channel></rss>